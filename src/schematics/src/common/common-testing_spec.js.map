{"version":3,"file":"common-testing_spec.js","sourceRoot":"","sources":["../../../../../../projects/tooling/src/schematics/src/common/common-testing_spec.ts"],"names":[],"mappings":"AAAA,MAAM;AACN,8CAA8C;AAC9C,MAAM;AAEN,mEAAmE;AACnE,mFAAmF;AACnF,8FAA8F;AAC9F,+EAA+E;AAC/E,wDAAwD;AACxD,kFAAkF;AAClF,uEAAuE;AACvE,yDAAyD;AAEzD,sDAAsD;AACtD,yBAAyB;AACzB,kCAAkC;AAClC,wBAAwB;AACxB,KAAK;AAEL,kDAAkD;AAClD,mBAAmB;AACnB,8BAA8B;AAC9B,0BAA0B;AAC1B,6BAA6B;AAC7B,qBAAqB;AACrB,sBAAsB;AACtB,wBAAwB;AACxB,uBAAuB;AACvB,6BAA6B;AAC7B,KAAK;AAEL,8CAA8C;AAC9C,mBAAmB;AACnB,+BAA+B;AAC/B,qBAAqB;AACrB,6BAA6B;AAC7B,yBAAyB;AACzB,yBAAyB;AACzB,KAAK;AAEL,uEAAuE;AACvE,uCAAuC;AACvC,sBAAsB;AACtB,kEAAkE;AAClE,QAAQ;AACR,uDAAuD;AACvD,6CAA6C;AAC7C,IAAI;AAEJ,4FAA4F;AAC5F,4DAA4D;AAC5D,4DAA4D;AAC5D,qEAAqE;AACrE,IAAI;AAEJ,yEAAyE;AACzE,qDAAqD;AACrD,iEAAiE;AACjE,IAAI;AAEJ,yHAAyH;AACzH,kGAAkG;AAClG,0CAA0C;AAC1C,8EAA8E;AAC9E,IAAI;AAEJ,MAAM;AACN,iEAAiE;AACjE,sBAAsB;AACtB,wCAAwC;AACxC,MAAM;AACN,6IAA6I;AAC7I,6CAA6C;AAC7C,qEAAqE;AACrE,IAAI","sourcesContent":["// /**\r\n//  * Some common functions used by testcases.\r\n//  */\r\n\r\n// import {UnitTestTree} from '@angular-devkit/schematics/testing';\r\n// import {Schema as WorkspaceOptions} from '@schematics/angular/workspace/schema';\r\n// import {Schema as ApplicationOptions, Style} from '@schematics/angular/application/schema';\r\n// import {Schema as LibraryOptions} from '@schematics/angular/library/schema';\r\n// import {IPackageJson} from './package-json-snapshot';\r\n// import {WorkspaceSchema} from '../../schematics-core/utility/workspace-models';\r\n// import {IXliffMergeOptions} from '@ngx-i18nsupport/ngx-i18nsupport';\r\n// import {WorkspaceSnaphot} from './workspace-snapshot';\r\n\r\n// export const workspaceOptions: WorkspaceOptions = {\r\n//     name: 'workspace',\r\n//     newProjectRoot: 'projects',\r\n//     version: '6.0.0',\r\n// };\r\n\r\n// export const appOptions: ApplicationOptions = {\r\n//     name: 'bar',\r\n//     experimentalIvy: false,\r\n//     inlineStyle: false,\r\n//     inlineTemplate: false,\r\n//     minimal: true,\r\n//     routing: false,\r\n//     style: Style.Css,\r\n//     skipTests: true,\r\n//     skipPackageJson: true,\r\n// };\r\n\r\n// export const libOptions: LibraryOptions = {\r\n//     name: 'bar',\r\n//     entryFile: 'public_api',\r\n//     prefix: 'lib',\r\n//     skipPackageJson: true,\r\n//     skipInstall: true,\r\n//     skipTsConfig: true\r\n// };\r\n\r\n// export function readAsJson<T>(tree: UnitTestTree, path: string): T {\r\n//     const content = tree.read(path);\r\n//     if (!content) {\r\n//         throw new Error('file ' + path + ' not found in tree');\r\n//     }\r\n//     const contentString = content.toString('UTF-8');\r\n//     return JSON.parse(contentString) as T;\r\n// }\r\n\r\n// export function readPackageJson(tree: UnitTestTree, projectName?: string): IPackageJson {\r\n//     const path = (!projectName) ? '' : '/' + projectName;\r\n//     expect(tree.files).toContain(`${path}/package.json`);\r\n//     return readAsJson<IPackageJson>(tree, `${path}/package.json`);\r\n// }\r\n\r\n// export function readAngularJson(tree: UnitTestTree): WorkspaceSchema {\r\n//     expect(tree.files).toContain('/angular.json');\r\n//     return readAsJson<WorkspaceSchema>(tree, '/angular.json');\r\n// }\r\n\r\n// export function readXliffmergeJson(tree: UnitTestTree, projectName: string): {xliffmergeOptions: IXliffMergeOptions} {\r\n//     const path = projectName ? `/projects/${projectName}/xliffmerge.json` : '/xliffmerge.json';\r\n//     expect(tree.files).toContain(path);\r\n//     return readAsJson<{xliffmergeOptions: IXliffMergeOptions}>(tree, path);\r\n// }\r\n\r\n// /**\r\n//  * Read the xliffmerge configuration form the builder options.\r\n//  * @param tree Tree\r\n//  * @param projectName name of project\r\n//  */\r\n// export function readXliffmergeConfigFromWorkspace(tree: UnitTestTree, projectName: string): {xliffmergeOptions: IXliffMergeOptions}|null {\r\n//     const ws = new WorkspaceSnaphot(tree);\r\n//     return ws.getActualXliffmergeConfigFromWorkspace(projectName);\r\n// }\r\n"]}
{"version":3,"file":"testing_utils.js","sourceRoot":"","sources":["../../../../../../projects/tooling/src/builders/src/xliffmergebuilder/testing_utils.ts"],"names":[],"mappings":"AAAA,mGAAmG;AACnG,2FAA2F;AAC3F,oFAAoF;AACpF,uDAAuD;AAEvD,MAAM;AACN,yDAAyD;AACzD,qEAAqE;AACrE,MAAM;AACN,mFAAmF;AACnF,qCAAqC;AACrC,wBAAwB;AACxB,0CAA0C;AAC1C,KAAK;AACL,0DAA0D;AAC1D,qDAAqD;AAErD,wDAAwD;AACxD,sDAAsD;AACtD,uEAAuE;AACvE,oDAAoD;AAEpD,oGAAoG;AACpG,oDAAoD;AACpD,wBAAwB;AACxB,wBAAwB;AACxB,0EAA0E;AAC1E,OAAO;AACP,8DAA8D;AAE9D,aAAa;AACb,iBAAiB;AACjB,oCAAoC;AACpC,iBAAiB;AACjB,OAAO;AACP,IAAI","sourcesContent":["// import {experimental, getSystemPath, join, normalize, Path, schema} from '@angular-devkit/core';\r\n// import {TestingArchitectHost, TestProjectHost} from '@angular-devkit/architect/testing';\r\n// import {WorkspaceNodeModulesArchitectHost} from '@angular-devkit/architect/node';\r\n// import {Architect} from '@angular-devkit/architect';\r\n\r\n// /**\r\n//  * We are using a test workspace from the test folder.\r\n//  * In this workspace the xliffmerge builder is already configured.\r\n//  */\r\n// const ngxi18nsupportRoot = normalize(join(normalize(__dirname), '../../../..'));\r\n// export const workspaceRoot = join(\r\n//   ngxi18nsupportRoot,\r\n//   'src/builders/test/hello-world-app/',\r\n// );\r\n// export const host = new TestProjectHost(workspaceRoot);\r\n// export const outputPath: Path = normalize('dist');\r\n\r\n// export async function createArchitect(wsRoot: Path) {\r\n//   const registry = new schema.CoreSchemaRegistry();\r\n//   registry.addPostTransform(schema.transforms.addUndefinedDefaults);\r\n//   const workspaceSysPath = getSystemPath(wsRoot);\r\n\r\n//   const workspace = await experimental.workspace.Workspace.fromPath(host, host.root(), registry);\r\n//   const architectHost = new TestingArchitectHost(\r\n//     workspaceSysPath,\r\n//     workspaceSysPath,\r\n//     new WorkspaceNodeModulesArchitectHost(workspace, workspaceSysPath),\r\n//   );\r\n//   const architect = new Architect(architectHost, registry);\r\n\r\n//   return {\r\n//     workspace,\r\n//     architectHost: architectHost,\r\n//     architect,\r\n//   };\r\n// }\r\n"]}